% Experiment with TouchScreen
% 2020 by Clara Kuper
% ToDo Restructure trials to match NoiseStrike Layout 
% check timing
% include eye-tracking

% based on ptb demos by Peter Scarfe http://peterscarfe.com/ptbtutorials.html
% and vpixx demo 17 http://www.vpixx.com/manuals/psychtoolbox/html/Demo17.html

% System setup
% Clear the workspace and the screen
sca;
clear all;
clear mex;
clear functions;
% cursor goes home, command window scrolled up
home;

% Which experiment are we running?
expCode = 'NoiseStrike';
sprintf('Now running experiment %s',expCode);

% add the functions folder to searchpath and define storage paths
addpath('Functions')

% Unify keys in case sb codes with a different system
KbName('UnifyKeyNames');

% Here we call some default settings for setting up Psychtoolbox

PsychDefaultSetup(2);

% Init random
rand('seed', sum(100 * clock));

%start a timer for the experiment
tic;

% define some settings for the experiment
global settings visual design

settings.TEST   = input('is this a setup(0) or the actual testing (1)?\n'); % 0 = setup session, 1 = actual testing
settings.MODE   = 1; % 1 = Hands, 2 = Eyes, 3 = both
settings.DEBUG  = 0; % 1 = debug mode, 0 = normal mode
settings.CODE   = 0; % if you want to use old calibration data, this can be changed when the experiment start. Don't change here.
if settings.TEST
    settings.TRIALS = round(input('How many trials per block do do feel like? Enter an even number.\n There will be 5 blocks. \n')/2);
    settings.BLOCK  = input('Do you want the difficulty to be blocked? Yes(1) or No(0)? \n');
else
    settings.BLOCK  = 0;
end

%% start the experiment loop, errors in this loop will be caught
try
    newFile = 0;
        while ~newFile
            subCode = getID(expCode);

            subPath = strcat('./Data/',subCode);

            % create data file
            datFile    = sprintf('%s.dat',subPath);
            datLogFile = sprintf('%sLog.dat',subPath);
            if settings.TEST && exist(datFile,'file')
                o = input('>>>> This file exists already. Should I overwrite it [y / n]? \n','s');
                if strcmp(o,'y')
                    newFile = 1;
                else
                    reuse = input('Do you want to use old calibration files? [y/n]? \n', 's');
                    if strcmp(reuse,'y')
                        settings.testCode = subCode;
                        settings.CODE = 1;
                        fprintf('Ok, will use the old file for calibration. Please enter a new code to save the data \n');
                    end
                end
            else
                newFile = 1;
            end
        end
        
    setScreens;
    
                                                                                
    % generate design 
    genDesign(subCode);
    
    % prepare the stimuli
    prepStim;

    % Add experiment Info after OpenWindow so it's under the text generated by Screen
    fprintf('\nTOUCHPixx Basic Demo\n');
    HideCursor;

    % For testing: do we want continuous logging?:
    include_continuous = true;

    % Configure DATAPixx/TOUCHPixx
    Datapixx('SetVideoMode', 0);                        % Normal passthrough
    Datapixx('EnableTouchpixx');                        % Turn on TOUCHPixx hardware driver
    Datapixx('SetTouchpixxStabilizeDuration', 0.01);    % stable coordinates in secs before recognising touch
    Datapixx('RegWrRd');

    calibrate_touchpixx();
    
    %% Run trials
    % Display Instructions:
    DrawFormattedText(visual.window, 'Touch the bar to start. Try to block the target.', 'center', 200, visual.textColor);
    Screen('Flip',visual.window);
    WaitSecs(2);
    
    for b = design.blockOrder
        [data.block(b),dataLog.block(b)] = runBlock(b);
    end    
    
catch me
    rethrow(me);
    reddUp; %#ok<UNRCH>
end
    
% Clear the screen. "sca" is short hand for "Screen CloseAll". This clears
% all features related to PTB. Note: we leave the variables in the
% workspace so you can have a look at them if you want.
% For help see: help sca
if settings.TEST == 1
    save(datFile,'data');
    save(datLogFile,'dataLog');
    save(sprintf('./Design/%s_design.mat',design.vpcode),'design'); %
else
    tim.rea       = nanmean([data.block(1).trial.rea_time]);
    tim.rea_sd    = nanstd([data.block(1).trial.rea_time]);
    tim.mov       = nanmean([data.block(1).trial.mov_time]);
    tim.mov_sd    = nanstd([data.block(1).trial.mov_time]);
    save(sprintf('./Data/%s_timParams',design.vpcode),'tim');
    save(sprintf('./Data/%s_setUpData',design.vpcode),'data');
    
end

Datapixx('DisableTouchpixx');
sca;

Datapixx('Close'); %call the close command after closing the screens
ShowCursor;

expEnd = toc;

sprintf('This experiment lasted %i minutes', round(expEnd/60,1));
