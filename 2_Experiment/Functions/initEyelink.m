function [el, error]=initEyelink(vpcode)%% Initializes eyeLink-connection, creates edf-file% and writes experimental parameters to edf-file% % 2008 by Martin Rolfsglobal visual settings scr%---------------------%% define edf-filename %%---------------------%settings.edffilename = strcat(vpcode,'.edf');error=0;% set eyelink defaultsel=EyelinkInitDefaults(visual.window);% Initialization of the connection with the Eyelink Gazetracker.% exit program if this fails.if ~EyelinkInit(settings.TEST<1)    fprintf('Eyelink Init aborted.\n');    Eyelink('Shutdown');    return;end% create edf-filei = Eyelink('openfile', settings.edffilename);if i~=0	fprintf('Cannot create EDF file ''%s'' ', settings.edffilename);	Eyelink( 'Shutdown');	return;end%---------------------------------------%% general information on the experiment %%---------------------------------------%Eyelink('command', 'add_file_preamble_text', 'Recorded with NoiseStrike by Clara Kuper');%   SET UP TRACKER CONFIGURATIONEyelink('command', 'calibration_type = HV9');Eyelink('command', 'link_event_filter = LEFT,RIGHT,BUTTON');Eyelink('command', 'link_sample_data = LEFT,RIGHT,GAZE,AREA');Eyelink('command', 'heuristic_filter = 1 1');%--------------------------------------------------------%% write descriptions of the experiment into the edf-file %%--------------------------------------------------------%Eyelink('message', 'BEGIN OF DESCRIPTIONS');Eyelink('message', 'Subject code: %s', vpcode);Eyelink('message', 'END OF DESCRIPTIONS');%--------------------------------%% modify calibration target area %%--------------------------------%calibAreaProportion = sprintf('calibration_area_proportion = %d %d',0.6*[scr.xres scr.yres]/[scr.xres scr.yres]);Eyelink('command', calibAreaProportion); % shrinking of calibration area%--------------------------------------%% modify a few of the default settings %%--------------------------------------%el.backgroundcolour = visual.bgcolor;		% background color when calibratingel.foregroundcolour = visual.fgcolor;       % foreground color when calibratingel.calibrationfailedsound = 'off';				% no sounds indicating success of calibrationel.calibrationsuccesssound = 'off';%Eyelink('command', 'set_cal_sounds', 'off')% test mode of eyelink connectionstatus = Eyelink('isconnected');switch status    case -1        fprintf(1, 'Eyelink in dummymode.\n\n');    case  0        fprintf(1, 'Eyelink not connected.\n\n');    case  1        fprintf(1, 'Eyelink connected.\n\n');endif Eyelink('isconnected')==el.notconnected    Eyelink('closefile');    Eyelink('shutdown');    Screen('closeall');    return;end%sprintf(el.TERMINATE_KEY)error=el.ABORT_EXPT;