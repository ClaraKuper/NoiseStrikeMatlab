% Experiment with TouchScreen
% 2020 by Clara Kuper
% check timing

% System setup
% Clear the workspace and the screen
sca;
clear all;
clear mex;
clear functions;
% cursor goes home, command window scrolled up
home;

% Which experiment are we running?
expCode = 'NS';
sprintf('Now running experiment %s',expCode);

% add the functions folder to searchpath and define storage paths
addpath('Functions/','Data/', 'edf/');

% Unify keys in case sb codes with a different system
KbName('UnifyKeyNames');

% Here we call some default settings for setting up Psychtoolbox

PsychDefaultSetup(2);

% Init random
rand('seed', sum(100 * clock));

%start a timer for the experiment
tic;

% define some settings for the experiment
global settings visual design

settings.TEST   = 1; % Track or no Track
settings.SYNCTEST = 1; % run synchtest or not
settings.eye_used = str2num(input('\nWhich eye do we track (0 = left, 1 = right):  ','s'));
 
%% start the experiment loop, errors in this loop will be caught
try
    newFile = 0;
        while ~newFile
            subCode = getID(expCode);

            subPath = strcat('./Data/',subCode);

            % create data file
            datFile    = sprintf('%s.mat',subPath);
            datLogFile = sprintf('%sLog.mat',subPath);
            if exist(datFile,'file')
                o = input('>>>> This file exists already. Should I overwrite it [y / n]? \n','s');
                if strcmp(o,'y')
                    newFile = 1;
                end
            else
                newFile = 1;
            end
        end
        
    setScreens;
    
                                                                                
    % generate design 
    genDesign(subCode);
    
    % prepare the stimuli
    prepStim;

    % Add experiment Info after OpenWindow so it's under the text generated by Screen
    fprintf('\nNoiseStrike\n');
    HideCursor;
    
    % Configure DATAPixx/TOUCHPixx
    Datapixx('SetVideoMode', 0);                        % Normal passthrough
    Datapixx('EnableTouchpixx');                        % Turn on TOUCHPixx hardware driver
    Datapixx('SetTouchpixxStabilizeDuration', 0.01);    % stable coordinates in secs before recognising touch
    Datapixx('RegWrRd');

    calibrate_touchpixx();
    
    % initialize EyeLink
    el = [];
    
    [el, error] = initEyelink(subCode);
    
    % first calibration
    eye_available = Eyelink('EyeAvailable'); % get eye that's tracked
    
    if ~ settings.eye_used == eye_available
        disp('The eye set for tracking does not match the tracked eye. Please shut down the EyeLink and correct.')
        WaitSecs(3);
        ListenChar(1);
        Eyelink('Shutdown');

        ShowCursor;
        Screen('CloseAll')
        expEnd = toc;

        sprintf('This experiment lasted %i minutes', round(expEnd/60,1));
    end
    
    disp([num2str(GetSecs) ' Eyelink initialized.']);
    
    % For testing: do we want continuous logging?:
    include_continuous = true;

    
    %% Run trials
    % Display Instructions:
    ListenChar(0);
    Eyelink('Message', 'EXPERIMENT STARTED');
    DrawFormattedText(visual.window, 'Block the goal when the attacker hits', 'center', 200, visual.textColor);
    DrawFormattedText(visual.window, 'Press any key to start', 'center', 'center', visual.textColor);
    Screen('Flip',visual.window);
    WaitSecs(2);
    b_i = 1;
    for b = design.blockOrder
        KbPressWait;
        data.block(b) = runBlock(b, b_i);
        b_i = b_i+1;
    end    
    Eyelink('Message', 'EXPERIMENT ENDED');
catch me
    rethrow(me);
    reddUp; %#ok<UNRCH>
end
    
% Clear the screen. "sca" is short hand for "Screen CloseAll". This clears
% all features related to PTB. Note: we leave the variables in the
% workspace so you can have a look at them if you want.
% For help see: help sca

data_table = [data2output(data) position2table(design)];
writetable(data_table, sprintf('./Data/%s_table.csv',design.vpcode));

save(datFile,'data');
% save(datLogFile,'dataLog');
save(sprintf('./Design/%s_design.mat',design.vpcode),'design'); %

Datapixx('DisableTouchpixx');
Datapixx('Close'); %call the close command after closing the screens

Eyelink('CloseFile');
% download data file
WaitSecs(2);
try
    fprintf('Receiving data file ''%s''\n', settings.edffilename);
    status=Eyelink('ReceiveFile',settings.edffilename, 'edf/', 1);
    WaitSecs(2)
    if status > 0
        fprintf('ReceiveFile status %d\n', status);
    end
    if 2==exist(settings.edffilename, 'file')
        fprintf('Data file ''%s'' can be found in ''%s''\n', settings.edffilename, pwd );
        [sucMov,mesMov,messMov] = movefile(settings.edffilename,'edf/','f');
        if sucMov
            fprintf('File successfully moved into edf folder.\n');
        end
    end
catch rdf
    fprintf('Problem receiving data file ''%s''\n', settings.edffilename);
    rdf;
end

WaitSecs(3);
ListenChar(1);
Eyelink('Shutdown');

ShowCursor;
Screen('CloseAll')
expEnd = toc;

sprintf('This experiment lasted %i minutes', round(expEnd/60,1));
